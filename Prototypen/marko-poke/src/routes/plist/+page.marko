import { getPaginatedPokemonList } from "../../lib/api";

static function getPage(query) {
    const page = query.get("page");
    if (!page) return 1;
    return +page;
}

static function getOffset(query) {
    const offset = query.get("offset");
    if (!offset || offset < 1) return 0;
    return +offset;
}

static function getPreviousLink(offset, limit = 5) {
    if (offset - limit < 0) return 0
    return offset - 5
}

$ const limit = 5

//$ console.log($global.url.search)

//$ console.log($global.url);
$ const page = getPage($global.url.searchParams);
//$ console.log(page)
$ const offset = getOffset($global.url.searchParams);

$ const test = "Test";
$ const name = input;
//$ console.log(input)

$ let lastPokemon = null

<div class="container">
    <header>
        <img src="./logo.svg" alt="Marko" class="logo">
    </header>
    <main>
        <a href=`?page=${page + 1}`>
            Next page (${page})
        </a>
        <a href=`?offset=${getPreviousLink(offset)}`>
            < Previous page
        </a>
        <span>
            Page: ${offset/limit+1}
        </span>
        <a href=`?offset=${offset + 5}`>
            Next page >
        </a>
        <p>
            ${lastPokemon}
        </p>
        <p/>
        <await(getPaginatedPokemonList(offset)) client-reorder>
            <@placeholder>
                <div>Loading</div>
            </@placeholder>
            <@then|pokemons|>
                <div>
                    <div>
                        //${pokemons}
                        $ lastPokemon = pokemons[pokemons.length-1].name
                        ${lastPokemon}
                    </div>
                    <ul>
                        <for|pokemon| of=pokemons>
                            <li>
                                <div>${pokemon.name}</div>
                                //<div>${pokemon.url}</div>
                                <pokemon-card id=pokemon.id name=pokemon.name />
                            </li>
                        </for>
                    </ul>
                </div>
            </@then>
        </await>
    </main>
</div>

style {
    .container {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        font-size: clamp(1em, 2vw, 2em);
        padding: 1em;
        box-sizing: border-box;
        height: 100%;
        width: 100%;
    }
    img.logo {
        width: 12em;
    }
}
