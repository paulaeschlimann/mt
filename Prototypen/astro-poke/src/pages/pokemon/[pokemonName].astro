---
import Layout from '../../layouts/Layout.astro';
import { getPokemon } from '../../data/data-fetch'
import { CartButton } from '../../components/CartButton';

const { pokemonName } = Astro.params;
const title = pokemonName || ""

const data = await getPokemon(pokemonName)

if (data.status === 404) {
    Astro.response.status = 404;
}
---
<Layout title={title}>
    <div class="page">
        <h1>{pokemonName} #{data.id}</h1>
        
        <img src={data.imageUrl} loading="lazy" />

        <div class="types-container">
            {data.types.map((type: any) => (
                <div class="stat-item-property">
                    {type.type.name.charAt(0).toUpperCase() +type.type.name.slice(1)}
                </div>
            ))}
        </div>

        <div class="stat-item-property">
            <div>Height</div>
            <div>{data.height}</div>
        </div>
        <hr class="item-h-line" />
        <div class="stat-item-property">
            <div>Weight</div>
            <div>{data.weight}</div>
        </div>
        <hr class="item-h-line" />
        <div class="stat-container">
            {data.stats.map((stat: any) => (
                <div class="stat-item-container">
                    <div class="stat-item">
                        <div class="stat-item-property">
                            <div>
                                {stat.stat.name}
                            </div>
                            <div>
                                {stat.base_stat}
                            </div>
                        </div>
                        <progress class="stat-indicator" value={stat.base_stat} max="100" />
                    </div>
                </div>
                <hr class="item-h-line" />
            ))}
        </div>

        <div class="cart-button">
            <CartButton {...{ itemId: data.id, name: pokemonName }} client:visible />
        </div>
    </div>
</Layout>

<style>
    .page {
        max-width: 800px;
        margin: auto;
        text-align: center;
    }
    .types-container {
		display: flex;
		justify-content: center;
		column-gap: 0.5rem;
    }
    .types-container div {
		padding: 0.5rem;
		border: 2px solid rgb(75, 85, 99);
		border-radius: 0.375rem;
		font-style: normal;
		font-weight: 500;
		font-size: 0.75rem;
	}
    .stat-container {
        display: flex;
        flex-direction: column;
    }
    .types-container,
    .stat-container {
        margin-bottom: 3rem;
    }
    .stat-item-container {
        display: flex;
        align-items: stretch;
    }
    .stat-item {
        width: 100%;
    }
    .stat-item-property {
		margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }
    .stat-indicator {
        width: 100%;
    }
    progress[value] {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
    }
    progress[value]::-webkit-progress-bar {
        background-color: lightgray;
    }
    progress::-webkit-progress-value {
        background-color: darkblue;
    }
    progress[value]::-moz-progress-bar {
        background-color: darkblue;
    }
    .item-h-line {
        border-color: lightgrey;
        width: 100%;
    }
    .cart-button {
        text-align: center;
    }
</style>