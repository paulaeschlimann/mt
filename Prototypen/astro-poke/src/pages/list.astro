---
import Layout from '../layouts/Layout.astro';
import PokemonCard from '../components/PokemonCard.astro';
import { CartCounter } from '../components/cart-counter.js';
import CartCounterLit from '../components/CartCounterLit'

import { pokemons } from '../data/pokemon'

const POKEMON_API = "https://pokeapi.co/api/v2/"
const POKEMON_IMAGE_URL = "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/"

const response = await fetch(POKEMON_API + "pokemon?limit=151&offset=0")
const data = await response.json()

/*const dataEnhanced = data.results.map((obj : any) => {
    const withoutTrailingSlash = obj.url.slice(0, -1)
    const pokemonNumber = withoutTrailingSlash.substring(withoutTrailingSlash.lastIndexOf('/')+1)
    obj.imageUrl = `${POKEMON_IMAGE_URL}${pokemonNumber}.png`
    return obj
})*/

let mergedData = []

for(let i = 0; i < data.results.length; i++) {
	const withoutTrailingSlash = data.results[i].url.slice(0, -1)
	const pokemonNumber = +withoutTrailingSlash.substring(withoutTrailingSlash.lastIndexOf('/')+1)
	const imageUrl = `${POKEMON_IMAGE_URL}${pokemonNumber}.png`

	mergedData.push({
		...data.results[i],
		id: pokemonNumber,
		imageUrl,
		...(pokemons.find((itmInner) => itmInner.id === pokemonNumber))
	})
}
---

<Layout title="Welcome to Astro.">
	<div class="container">
		<main>

			<CartCounter client:load />

			<CartCounterLit client:only="lit" />

			<div class="grid-container">
				{mergedData.map((pokemon : any) => (
					<PokemonCard id={pokemon.id} name={pokemon.name} imageUrl={pokemon.imageUrl} types={pokemon.types} />
				))}
			</div>
		</main>
	</div>
</Layout>

<style>
	.container {
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		font-size: clamp(1em, 2vw, 2em);
		padding: 1em;
		box-sizing: border-box;
		width: 100%;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.grid-container {
		display: grid;
		grid-template-columns: repeat(4, minmax(0, 1fr));
		margin: auto; 
  	}
</style>
